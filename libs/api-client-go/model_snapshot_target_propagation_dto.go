/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the SnapshotTargetPropagationDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotTargetPropagationDto{}

// SnapshotTargetPropagationDto struct for SnapshotTargetPropagationDto
type SnapshotTargetPropagationDto struct {
	Id                         string    `json:"id"`
	Target                     string    `json:"target"`
	DesiredConcurrentSandboxes float32   `json:"desiredConcurrentSandboxes"`
	UserOverride               float32   `json:"userOverride"`
	SnapshotId                 string    `json:"snapshotId"`
	CreatedAt                  time.Time `json:"createdAt"`
	UpdatedAt                  time.Time `json:"updatedAt"`
}

type _SnapshotTargetPropagationDto SnapshotTargetPropagationDto

// NewSnapshotTargetPropagationDto instantiates a new SnapshotTargetPropagationDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotTargetPropagationDto(id string, target string, desiredConcurrentSandboxes float32, userOverride float32, snapshotId string, createdAt time.Time, updatedAt time.Time) *SnapshotTargetPropagationDto {
	this := SnapshotTargetPropagationDto{}
	this.Id = id
	this.Target = target
	this.DesiredConcurrentSandboxes = desiredConcurrentSandboxes
	this.UserOverride = userOverride
	this.SnapshotId = snapshotId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewSnapshotTargetPropagationDtoWithDefaults instantiates a new SnapshotTargetPropagationDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotTargetPropagationDtoWithDefaults() *SnapshotTargetPropagationDto {
	this := SnapshotTargetPropagationDto{}
	return &this
}

// GetId returns the Id field value
func (o *SnapshotTargetPropagationDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SnapshotTargetPropagationDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SnapshotTargetPropagationDto) SetId(v string) {
	o.Id = v
}

// GetTarget returns the Target field value
func (o *SnapshotTargetPropagationDto) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *SnapshotTargetPropagationDto) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *SnapshotTargetPropagationDto) SetTarget(v string) {
	o.Target = v
}

// GetDesiredConcurrentSandboxes returns the DesiredConcurrentSandboxes field value
func (o *SnapshotTargetPropagationDto) GetDesiredConcurrentSandboxes() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DesiredConcurrentSandboxes
}

// GetDesiredConcurrentSandboxesOk returns a tuple with the DesiredConcurrentSandboxes field value
// and a boolean to check if the value has been set.
func (o *SnapshotTargetPropagationDto) GetDesiredConcurrentSandboxesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DesiredConcurrentSandboxes, true
}

// SetDesiredConcurrentSandboxes sets field value
func (o *SnapshotTargetPropagationDto) SetDesiredConcurrentSandboxes(v float32) {
	o.DesiredConcurrentSandboxes = v
}

// GetUserOverride returns the UserOverride field value
func (o *SnapshotTargetPropagationDto) GetUserOverride() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.UserOverride
}

// GetUserOverrideOk returns a tuple with the UserOverride field value
// and a boolean to check if the value has been set.
func (o *SnapshotTargetPropagationDto) GetUserOverrideOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserOverride, true
}

// SetUserOverride sets field value
func (o *SnapshotTargetPropagationDto) SetUserOverride(v float32) {
	o.UserOverride = v
}

// GetSnapshotId returns the SnapshotId field value
func (o *SnapshotTargetPropagationDto) GetSnapshotId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value
// and a boolean to check if the value has been set.
func (o *SnapshotTargetPropagationDto) GetSnapshotIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnapshotId, true
}

// SetSnapshotId sets field value
func (o *SnapshotTargetPropagationDto) SetSnapshotId(v string) {
	o.SnapshotId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SnapshotTargetPropagationDto) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SnapshotTargetPropagationDto) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SnapshotTargetPropagationDto) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *SnapshotTargetPropagationDto) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *SnapshotTargetPropagationDto) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *SnapshotTargetPropagationDto) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o SnapshotTargetPropagationDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotTargetPropagationDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["target"] = o.Target
	toSerialize["desiredConcurrentSandboxes"] = o.DesiredConcurrentSandboxes
	toSerialize["userOverride"] = o.UserOverride
	toSerialize["snapshotId"] = o.SnapshotId
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *SnapshotTargetPropagationDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"target",
		"desiredConcurrentSandboxes",
		"userOverride",
		"snapshotId",
		"createdAt",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSnapshotTargetPropagationDto := _SnapshotTargetPropagationDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSnapshotTargetPropagationDto)

	if err != nil {
		return err
	}

	*o = SnapshotTargetPropagationDto(varSnapshotTargetPropagationDto)

	return err
}

type NullableSnapshotTargetPropagationDto struct {
	value *SnapshotTargetPropagationDto
	isSet bool
}

func (v NullableSnapshotTargetPropagationDto) Get() *SnapshotTargetPropagationDto {
	return v.value
}

func (v *NullableSnapshotTargetPropagationDto) Set(val *SnapshotTargetPropagationDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotTargetPropagationDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotTargetPropagationDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotTargetPropagationDto(val *SnapshotTargetPropagationDto) *NullableSnapshotTargetPropagationDto {
	return &NullableSnapshotTargetPropagationDto{value: val, isSet: true}
}

func (v NullableSnapshotTargetPropagationDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotTargetPropagationDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
