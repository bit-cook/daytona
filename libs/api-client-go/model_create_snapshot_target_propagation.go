/*
Daytona

Daytona AI platform API Docs

API version: 1.0
Contact: support@daytona.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateSnapshotTargetPropagation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSnapshotTargetPropagation{}

// CreateSnapshotTargetPropagation struct for CreateSnapshotTargetPropagation
type CreateSnapshotTargetPropagation struct {
	// The target environment for the snapshot
	Target string `json:"target"`
	// The desired concurrent sandboxes for the target
	DesiredConcurrentSandboxes float32 `json:"desiredConcurrentSandboxes"`
}

type _CreateSnapshotTargetPropagation CreateSnapshotTargetPropagation

// NewCreateSnapshotTargetPropagation instantiates a new CreateSnapshotTargetPropagation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSnapshotTargetPropagation(target string, desiredConcurrentSandboxes float32) *CreateSnapshotTargetPropagation {
	this := CreateSnapshotTargetPropagation{}
	this.Target = target
	this.DesiredConcurrentSandboxes = desiredConcurrentSandboxes
	return &this
}

// NewCreateSnapshotTargetPropagationWithDefaults instantiates a new CreateSnapshotTargetPropagation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSnapshotTargetPropagationWithDefaults() *CreateSnapshotTargetPropagation {
	this := CreateSnapshotTargetPropagation{}
	return &this
}

// GetTarget returns the Target field value
func (o *CreateSnapshotTargetPropagation) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *CreateSnapshotTargetPropagation) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *CreateSnapshotTargetPropagation) SetTarget(v string) {
	o.Target = v
}

// GetDesiredConcurrentSandboxes returns the DesiredConcurrentSandboxes field value
func (o *CreateSnapshotTargetPropagation) GetDesiredConcurrentSandboxes() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DesiredConcurrentSandboxes
}

// GetDesiredConcurrentSandboxesOk returns a tuple with the DesiredConcurrentSandboxes field value
// and a boolean to check if the value has been set.
func (o *CreateSnapshotTargetPropagation) GetDesiredConcurrentSandboxesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DesiredConcurrentSandboxes, true
}

// SetDesiredConcurrentSandboxes sets field value
func (o *CreateSnapshotTargetPropagation) SetDesiredConcurrentSandboxes(v float32) {
	o.DesiredConcurrentSandboxes = v
}

func (o CreateSnapshotTargetPropagation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSnapshotTargetPropagation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["target"] = o.Target
	toSerialize["desiredConcurrentSandboxes"] = o.DesiredConcurrentSandboxes
	return toSerialize, nil
}

func (o *CreateSnapshotTargetPropagation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"target",
		"desiredConcurrentSandboxes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSnapshotTargetPropagation := _CreateSnapshotTargetPropagation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSnapshotTargetPropagation)

	if err != nil {
		return err
	}

	*o = CreateSnapshotTargetPropagation(varCreateSnapshotTargetPropagation)

	return err
}

type NullableCreateSnapshotTargetPropagation struct {
	value *CreateSnapshotTargetPropagation
	isSet bool
}

func (v NullableCreateSnapshotTargetPropagation) Get() *CreateSnapshotTargetPropagation {
	return v.value
}

func (v *NullableCreateSnapshotTargetPropagation) Set(val *CreateSnapshotTargetPropagation) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSnapshotTargetPropagation) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSnapshotTargetPropagation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSnapshotTargetPropagation(val *CreateSnapshotTargetPropagation) *NullableCreateSnapshotTargetPropagation {
	return &NullableCreateSnapshotTargetPropagation{value: val, isSet: true}
}

func (v NullableCreateSnapshotTargetPropagation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSnapshotTargetPropagation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
